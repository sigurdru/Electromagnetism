
# Information about all exercises in the file pois_eq.do.txt.
# The information can be loaded into a Python list of dicts by
#
# f = open('.pois_eq.exerinfo', 'r')
# exer = eval(f.read())
#
[{'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 1,
  'solution': '',
  'solution_file': None,
  'subex': [{'answer': '',
             'file': None,
             'hints': [],
             'solution': "Gauss' Law on differential form:\n"
                         '!bt\n'
                         '\\begin{equation}\n'
                         '\\nabla \\cdot \\mathbf{D} = \\rho _v \\implies '
                         '\\nabla \\cdot \\mathbf{E} = \\frac{\\rho '
                         '_v}{\\epsilon}\n'
                         '\\end{equation}\n'
                         '\n'
                         '!et\n'
                         'We can then apply the relationship $\\mathbf{E} = '
                         '-\\nabla V$, giving:\n'
                         '!bt\n'
                         '\\begin{equation}\n'
                         '\\nabla \\cdot \\nabla V= \\nabla^2V = '
                         '-\\frac{\\rho_ v}{\\epsilon} \n'
                         '\\end{equation}\n'
                         '\n'
                         '!et',
             'text': "Using Gauss' Law, derive Poisson's Equation.\n"
                     '!bt\n'
                     '\\begin{equation}\n'
                     '\\nabla^2 V = -\\frac{\\rho _v}{\\epsilon}\n'
                     '\\end{equation}\n'
                     '\n'
                     '!et'},
            {'answer': '',
             'file': None,
             'hints': ['If you fold the sylinder out you get a square.'],
             'solution': 'Since the bottom and top of the sylinder has a '
                         'constant potential, we know that the potential is '
                         'only a function of height. We also know that $\\rho '
                         '_v = 0$, which gives:\n'
                         '!bt\n'
                         '\\begin{align}\n'
                         '\\nabla² V = \\frac{d²V}{dh²} = 0 \\implies V(h) = '
                         'Ah + B \n'
                         '\\end{align}\n'
                         '\n'
                         '!et\n'
                         'Using boundary conditions we get the solution $V(h) '
                         '= (-10 \\rm{V/m}) h + 10\\rm{V}$.',
             'text': 'Consider a sylinder with height $h=1\\rm{m}$ and radius '
                     '$r=1\\rm{m}$. The inside of the sylinder is hollow, and '
                     "the walls are very thin. Use Poisson's Equation to find "
                     'the electric potential on the walls of the sylinder. The '
                     'bottom of the sylinder has electric potential '
                     '$V=10\\rm{V}$, and the top of the sylinder has zero '
                     'potential. The sylinder is electrically neutral.'},
            {'answer': '',
             'file': None,
             'hints': ['Use the approximation\n'
                       '!bt\n'
                       '\\begin{equation}\n'
                       '\\frac{dV_n}{dx} \\approx \\frac{V_{n+1}-V_n}{\\Delta '
                       'x}\n'
                       '\\end{equation}\n'
                       '\n'
                       '!et'],
             'solution': 'Using the hint we get that\n'
                         '!bt\n'
                         '\\begin{align}\n'
                         '\\frac{d² V_n}{d x²} &\\approx \\frac{1}{\\Delta '
                         'x}\\bigg(\\frac{V_{n+1} - V_n}{\\Delta x} - '
                         '\\frac{V_{n+2} - V{n+1}}{\\Delta x}\\bigg) \\\\\n'
                         '&= \\frac{V_{n+2}- 2V_{n+1} + V_n}{\\Delta x²} = '
                         '-\\frac{\\rho _v}{\\epsilon} \\\\\n'
                         '\\implies V_{n+2} &= 2V_{n+1} - V_n - \\frac{\\rho '
                         '_v}{\\epsilon}\\Delta x²\n'
                         '\\end{align}\n'
                         '\n'
                         '!et',
             'text': 'Find a difference equation that approximates the '
                     "solution Poisson's Equation, in one dimension."},
            {'answer': '',
             'file': None,
             'hints': ['Notice that you only know the top and bottom '
                       'condition. You need to test for differen initial '
                       'conditions until you find a solution that fits.',
                       'To test the initial conditions, you need to compare '
                       'your result (with the tested initial conditions) with '
                       'the potential at the bottom of the sylinder (that you '
                       'know).',
                       'A good testing range is $V_{n+1} \\in [10\\rm{V}, '
                       '8\\rm{V}]$.'],
             'solution': '!bt\n'
                         '\\begin{verbatim}import numpy as np\n'
                         'import numpy as np\n'
                         'import matplotlib.pyplot as plt\n'
                         '# Radius\n'
                         'r = 1\n'
                         '# circumference\n'
                         'o = 2*np.pi*r\n'
                         '# The area we are looking at\n'
                         'N = int(1e3)\n'
                         'h = np.linspace(0, 1, N)\n'
                         'x = np.linspace(0, o, N)\n'
                         'X, Y = np.meshgrid(x, h)\n'
                         'V = np.zeros((N, N))\n'
                         '# Setting initial conditions\n'
                         'V[0, :] = 10\n'
                         '# Potential at the end of the sylinder\n'
                         'V_end = 0\n'
                         '# The potential we are going to test\n'
                         'Vtest = np.linspace(10, 9, 100)\n'
                         '# Empty list we are going to fill with results\n'
                         'result = []\n'
                         '#Here we test for the different initial conditions\n'
                         'for v in Vtest:\n'
                         '    V[1, :] = v\n'
                         '    for i in range(N-2):\n'
                         '        #Calculating the result given the initial '
                         'conditions\n'
                         '        V[i+2, :] = 2*V[i+1, :] - V[i, :]\n'
                         '    #Fill list with results compered with actual '
                         'solution\n'
                         '    result.append(abs(V[-1, 0] - V_end))\n'
                         '#Find the best match\n'
                         'index = np.where(np.array(result) == min(result))\n'
                         '#Set best initial conditions\n'
                         'V[1, :] = Vtest[index]\n'
                         '#Find solution with best initial conditions\n'
                         'for i in range(N-2):\n'
                         '    V[i+2, :] = 2*V[i+1, :] - V[i, :]\n'
                         'result.append(abs(V[-1, 0] - V_end))\n'
                         '#Plot the result\n'
                         'fig, ax = plt.subplots()\n'
                         "CS = ax.contourf(X, Y, V, levels=100, cmap='cool')\n"
                         'fig.colorbar(CS)\n'
                         'plt.show()\n'
                         '\\end{verbatim}\n'
                         '\n'
                         '!et',
             'text': 'Imagine that we dont know the theoretical solution. We '
                     'then need to find it numerically. Use the difference '
                     "equation over to solve Poisson's Equation numerically "
                     'for the sylinder.'}],
  'text': "In this exesrcise we will look at Poisson's Equation.",
  'title': "Poisson's Equation",
  'type': 'Exercise',
  'type_visible': True}]